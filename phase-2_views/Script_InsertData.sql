
-- =============================================================================
-- Secção 3: Inserção de Dados (Base + Cenários Vistas A-O)
-- =============================================================================

-- ==================================================
-- Dados Base Essenciais
-- ==================================================

INSERT ALL
    INTO Estado_Maquina (ID_ESTADO, DESCRICAO) VALUES (1, 'Operacional')
    INTO Estado_Maquina (ID_ESTADO, DESCRICAO) VALUES (2, 'Em Manutencao')
    INTO Estado_Maquina (ID_ESTADO, DESCRICAO) VALUES (3, 'Com Erro')
    INTO Estado_Maquina (ID_ESTADO, DESCRICAO) VALUES (4, 'Bloqueada')
    INTO Estado_Maquina (ID_ESTADO, DESCRICAO) VALUES (5, 'Offline')
    INTO Estado_Maquina (ID_ESTADO, DESCRICAO) VALUES (6, 'SEM STOCK')
    INTO Estado_Maquina (ID_ESTADO, DESCRICAO) VALUES (0, 'Inativa')
SELECT * FROM dual;

INSERT ALL
    INTO Armazem (ID_ARMAZEM, NOME, LOCAL, CIDADE, LATITUDE, LONGITUDE) VALUES (1, 'TAVEIRO ARM01', 'Parque Industrial Taveiro', 'Taveiro', 40.188169, -8.508581)
    INTO Armazem (ID_ARMAZEM, NOME, LOCAL, CIDADE, LATITUDE, LONGITUDE) VALUES (2, 'COIMBRA ARM02', 'Zona Industrial da Pedrulha', 'Coimbra', 40.233838, -8.455351)
SELECT * FROM dual;

INSERT ALL
    INTO Funcionario (ID_FUNCIONARIO, NOME, CONTATO, ESTADO) VALUES (101, 'Rui Costa', '912345678', 'Ativo')
    INTO Funcionario (ID_FUNCIONARIO, NOME, CONTATO, ESTADO) VALUES (102, 'Ana Silva', '923456789', 'Ativo')
    INTO Funcionario (ID_FUNCIONARIO, NOME, CONTATO, ESTADO) VALUES (103, 'Carlos Mota', '934567890', 'Inativo')
    INTO Funcionario (ID_FUNCIONARIO, NOME, CONTATO, ESTADO) VALUES (104, 'Mariana Dias', '967890123', 'Ativo')
SELECT * FROM dual;

INSERT ALL
    INTO Veiculo (MATRICULA, MARCA, MODELO, TARA, AUTONOMIA_MAX_KM, ESTADO_VEICULO, ID_ARMAZEM_BASE) VALUES ('DD-66-77', 'SCANIA', 'SERIE L', 7500, 280, 'Disponível', 1)
    INTO Veiculo (MATRICULA, MARCA, MODELO, TARA, AUTONOMIA_MAX_KM, ESTADO_VEICULO, ID_ARMAZEM_BASE) VALUES ('AA-11-BB', 'Renault', 'Kangoo ZE', 1500, 300, 'Disponível', 1)
    INTO Veiculo (MATRICULA, MARCA, MODELO, TARA, AUTONOMIA_MAX_KM, ESTADO_VEICULO, ID_ARMAZEM_BASE) VALUES ('CC-22-DD', 'Mercedes', 'eSprinter', 2800, 250, 'Disponível', 2)
    INTO Veiculo (MATRICULA, MARCA, MODELO, TARA, AUTONOMIA_MAX_KM, ESTADO_VEICULO, ID_ARMAZEM_BASE) VALUES ('EE-33-FF', 'Renault', 'Master ZE', 3000, 300, 'Manutenção', 1)
SELECT * FROM dual;

INSERT ALL
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9901, 'Batatas Lays Originais', 'Snacks', 'Pacote 45g')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9902, 'Ruffles Presunto', 'Snacks', 'Pacote 45g')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9903, 'Doritos Tex-Mex', 'Snacks', 'Pacote 40g')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9904, 'Cheetos Futebolas', 'Snacks', 'Pacote 38g')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9920, 'MARS', 'Chocolates', 'Barra Chocolate 51g')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9924, 'LION', 'Chocolates', 'Barra Chocolate 42g')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9930, 'KitKat Classic', 'Chocolates', 'Barra Chocolate 41.5g')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (8870, 'AGUA LUSO 33cl', 'AGUA', 'Garrafa PET 33cl')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (8871, 'AGUA SERRA ESTRELA 50cl', 'AGUA', 'Garrafa PET 50cl')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (8878, 'AGUA FASTIO 50cl', 'AGUA', 'Garrafa PET 50cl')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (6601, 'Powerade Laranja', 'Bebidas Isotonicas', 'Garrafa 50cl')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (9955, 'Bolachas Maria 50g', 'Bolachas', 'Pacote individual')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (7701, 'Coca-Cola Original 33cl', 'Refrigerantes', 'Lata 33cl')
    INTO Produto (ID_PRODUTO, NOME, TIPO, DESCRICAO) VALUES (7705, 'Sumol Laranja 33cl', 'Refrigerantes', 'Lata 33cl')
SELECT * FROM dual;

INSERT ALL
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (1, 'Coimbra Shopping', 'Coimbra', 40.221189, -8.411022, TO_DATE('2023-01-15', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '5' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (63, 'CS CELAS', 'Coimbra', 40.218628, -8.419715, TO_DATE('2022-11-01', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '2' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (787, 'CHUC COVOES', 'Coimbra', 40.185167, -8.460908, TO_DATE('2023-05-20', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '8' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (773, 'Estacao Coimbra-B', 'Coimbra', 40.218056, -8.433889, TO_DATE('2022-09-10', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '1' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (884, 'Forum Coimbra', 'Coimbra', 40.208718, -8.436457, TO_DATE('2023-03-01', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '3' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (1001, 'MAQ01 USCELAS', 'Coimbra', 40.221689, -8.425388, TO_DATE('2023-02-01', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '4' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (999, 'Edificio X (Inativo)', 'Coimbra', 40.200000, -8.400000, TO_DATE('2022-01-01', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '30' DAY, 0)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (1002, 'Polo II Universidade', 'Coimbra', 40.186892, -8.413297, TO_DATE('2023-06-10', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '6' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (1003, 'Hospital Sobral Cid', 'Coimbra', 40.197471, -8.446069, TO_DATE('2023-07-15', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '7' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (1004, 'Figueira da Foz - Casino', 'Figueira da Foz', 40.148900, -8.860340, TO_DATE('2024-01-20', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '9' MINUTE, 1)
    INTO Maquina (ID_MAQUINA, LOCAL, CIDADE, LATITUDE, LONGITUDE, DATA_INSTALACAO, ULTIMA_ATUALIZACAO_STATUS, ID_ESTADO_ATUAL)
        VALUES (1005, 'Ginasio BodyFit', 'Coimbra', 40.210000, -8.415000, TO_DATE('2024-03-01', 'YYYY-MM-DD'), SYSTIMESTAMP - INTERVAL '10' MINUTE, 1)
SELECT * FROM dual;

INSERT ALL
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (101, 1, 'A1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (102, 1, 'A2')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (103, 1, 'A3')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (104, 1, 'A4')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (105, 1, 'B1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (6301, 63, 'C1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (6302, 63, 'C2')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (6303, 63, 'D1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (7871, 787, 'K1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (7872, 787, 'K2')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (7873, 787, 'L1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (7731, 773, 'W1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (7732, 773, 'W2')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (8841, 884, 'F1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (8842, 884, 'F2')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (8843, 884, 'G1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10011, 1001, 'U1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10012, 1001, 'U2')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10013, 1001, 'U3')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10014, 1001, 'U4')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10015, 1001, 'U5')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10021, 1002, 'A1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10031, 1003, 'W1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10051, 1005, 'P1')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10052, 1005, 'P2')
    INTO Compartimento (ID_COMPARTIMENTO, ID_MAQUINA, POSICAO_NA_MAQUINA) VALUES (10053, 1005, 'S1')
SELECT * FROM dual;

-- Limpa Configuracao_Compartimento antes de inserir novos dados
DELETE FROM Configuracao_Compartimento;
COMMIT;

INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 101, 9901, 1.20, 'A1', 15, 5, 0, TO_DATE('2024-01-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 102, 9902, 1.25, 'A2', 15, 5, 0, TO_DATE('2024-01-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 103, 9903, 1.30, 'A3', 15, 5, 0, TO_DATE('2024-01-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 104, 9904, 1.10, 'A4', 15, 5, 0, TO_DATE('2024-01-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 105, 8871, 0.80, 'B1', 20, 8, 12, TO_DATE('2024-01-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 6301, 9920, 1.50, 'C1', 20, 6, 16, TO_DATE('2023-11-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 6302, 9924, 1.45, 'C2', 25, 8, 5, TO_DATE('2023-11-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 6303, 7701, 1.00, 'D1', 30, 10, 20, TO_DATE('2023-11-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 7871, 9930, 1.40, 'K1', 18, 5, 10, TO_DATE('2024-02-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 7872, 9901, 1.20, 'K2', 25, 5, 25, TO_DATE('2024-02-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 7873, 8871, 0.80, 'L1', 25, 10, 21, TO_DATE('2024-02-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 7731, 8870, 0.70, 'W1', 40, 15, 5, TO_DATE('2022-10-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 7732, 7705, 1.10, 'W2', 30, 10, 15, TO_DATE('2022-10-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 8841, 8878, 0.90, 'F1', 50, 15, 40, TO_DATE('2023-04-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 8842, 8871, 0.85, 'F2', 50, 15, 35, TO_DATE('2023-04-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 8843, 9901, 1.25, 'G1', 25, 8, 10, TO_DATE('2023-04-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10011, 8870, 0.75, 'U1', 30, 10, 20, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10012, 7701, 1.05, 'U2', 30, 10, 25, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10013, 9955, 0.60, 'U3', 20, 5, 15, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10014, 9920, 1.55, 'U4', 20, 5, 18, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10015, 9930, 1.45, 'U5', 20, 5, 12, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10021, 8871, 0.80, 'A1', 35, 10, 15, TO_DATE('2023-07-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10031, 8870, 0.75, 'W1', 30, 10, 10, TO_DATE('2023-08-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10051, 6601, 1.80, 'P1', 20, 8, 15, TO_DATE('2024-03-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10052, 8870, 0.75, 'P2', 30, 10, 25, TO_DATE('2024-03-01', 'YYYY-MM-DD'));
INSERT INTO Configuracao_Compartimento (ID_CONFIGURACAO, ID_COMPARTIMENTO, ID_PRODUTO, PRECO_VENDA, CODIGO_CLIENTE, CAPACIDADE_PRODUTO, QTD_MINIMA, STOCK_ATUAL, DATA_CONFIGURACAO)
    VALUES (seq_config_comp.NEXTVAL, 10053, 9901, 1.20, 'S1', 15, 5, 8, TO_DATE('2024-03-01', 'YYYY-MM-DD'));
COMMIT;

INSERT ALL
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9901, 200, 50, TO_DATE('2025-03-20', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9902, 150, 50, TO_DATE('2025-03-20', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9903, 180, 50, TO_DATE('2025-03-20', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9904, 220, 50, TO_DATE('2025-03-20', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9920, 300, 80, TO_DATE('2025-03-25', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9924, 250, 80, TO_DATE('2025-03-25', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9930, 280, 80, TO_DATE('2025-03-25', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 8870, 1000, 200, TO_DATE('2025-04-01', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 8871, 1200, 200, TO_DATE('2025-04-01', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 8878, 900, 200, TO_DATE('2025-04-01', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 7701, 500, 100, TO_DATE('2025-03-15', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 7705, 400, 100, TO_DATE('2025-03-15', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 6601, 100, 30, TO_DATE('2025-04-02', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (1, 9955, 50, 20, TO_DATE('2025-01-10', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (2, 8870, 800, 150, TO_DATE('2025-04-02', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (2, 7701, 600, 120, TO_DATE('2025-03-18', 'YYYY-MM-DD'))
    INTO Stock_Armazem (ID_ARMAZEM, ID_PRODUTO, STOCK_ATUAL, QTD_MINIMA_STOCK, DATA_ULTIMA_ENTRADA) VALUES (2, 9901, 300, 50, TO_DATE('2025-03-28', 'YYYY-MM-DD'))
SELECT * FROM dual;
COMMIT;

-- ==================================================
-- Dados para Cenários Específicos das Vistas (A-O)
-- ==================================================

-- Dados para VIEW A [71, 174] (Snacks, Coimbra, Reabastecido Ontem, Stock Atual 0)
DECLARE
    v_viagem_id_a NUMBER;
    v_paragem_id_a NUMBER;
    v_abast_id NUMBER;
BEGIN
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, ID_ARMAZEM_FIM, DATA_HORA_INICIO, DATA_HORA_FIM, DISTANCIA_TOTAL_KM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 2, 2, TO_TIMESTAMP('2025-04-05 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-04-05 08:45:00', 'YYYY-MM-DD HH24:MI:SS'), 5.2, 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id_a;

    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA, DISTANCIA_PERCORRIDA_KM)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id_a, 1, 1, TO_TIMESTAMP('2025-04-05 08:11:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-04-05 08:40:00', 'YYYY-MM-DD HH24:MI:SS'), 'Abastecimento', 5.2)
    RETURNING ID_PARAGEM INTO v_paragem_id_a;

    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
        VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_a, 9901, 101, 6, 0, 6) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
        VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_a, 9902, 102, 6, 0, 6) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
        VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_a, 9903, 103, 6, 0, 6) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
        VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_a, 9904, 104, 6, 0, 6) RETURNING ID_ABASTECIMENTO INTO v_abast_id;

    FOR i IN 1..6 LOOP
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 1, 9901, 101, TO_TIMESTAMP('2025-04-05 09:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*10, 'MINUTE'), 1, 1.20, 1.20, 'MBWay', 'Concluida');
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 1, 9902, 102, TO_TIMESTAMP('2025-04-05 09:05:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*10, 'MINUTE'), 1, 1.25, 1.25, 'Multibanco', 'Concluida');
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 1, 9903, 103, TO_TIMESTAMP('2025-04-05 09:10:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*10, 'MINUTE'), 1, 1.30, 1.30, 'MBWay', 'Concluida');
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 1, 9904, 104, TO_TIMESTAMP('2025-04-05 09:15:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*10, 'MINUTE'), 1, 1.10, 1.10, 'Multibanco', 'Concluida');
    END LOOP;
    -- Se trigger update_stock NÃO ativo, forçar stock a 0 manualmente:
    /*
    UPDATE Configuracao_Compartimento SET STOCK_ATUAL = 0 WHERE ID_COMPARTIMENTO IN (101, 102, 103, 104);
    */
END;
/

-- Dados para VIEW B [75, 176] (Viagem específica, Abastecimento MARS)
DECLARE
    v_viagem_id_b NUMBER;
    v_paragem_id_b1 NUMBER;
    v_paragem_id_b2 NUMBER;
    v_carga_id NUMBER;
BEGIN
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, ID_ARMAZEM_FIM, DATA_HORA_INICIO, DATA_HORA_FIM, DISTANCIA_TOTAL_KM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 102, 'CC-22-DD', 1, 1, TO_TIMESTAMP('2025-03-11 09:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-11 11:30:00', 'YYYY-MM-DD HH24:MI:SS'), 30.0, 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id_b;

    INSERT INTO Carga_Viagem(ID_CARGA, ID_VIAGEM, ID_PRODUTO, QUANTIDADE_CARREGADA, QUANTIDADE_ATUAL_VEICULO)
    VALUES (seq_carga_viagem.NEXTVAL, v_viagem_id_b, 9920, 20, 20) RETURNING ID_CARGA INTO v_carga_id;
    INSERT INTO Carga_Viagem(ID_CARGA, ID_VIAGEM, ID_PRODUTO, QUANTIDADE_CARREGADA, QUANTIDADE_ATUAL_VEICULO)
    VALUES (seq_carga_viagem.NEXTVAL, v_viagem_id_b, 9924, 15, 15) RETURNING ID_CARGA INTO v_carga_id;
    INSERT INTO Carga_Viagem(ID_CARGA, ID_VIAGEM, ID_PRODUTO, QUANTIDADE_CARREGADA, QUANTIDADE_ATUAL_VEICULO)
    VALUES (seq_carga_viagem.NEXTVAL, v_viagem_id_b, 9901, 30, 30) RETURNING ID_CARGA INTO v_carga_id;

    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA, DISTANCIA_PERCORRIDA_KM)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id_b, 1002, 1, TO_TIMESTAMP('2025-03-11 09:45:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-11 10:05:00', 'YYYY-MM-DD HH24:MI:SS'), 'Abastecimento', 10.5)
    RETURNING ID_PARAGEM INTO v_paragem_id_b1;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
    VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_b1, 9901, 10021, 10, 5, 15); -- Ajustar comp ID se config for diferente
    UPDATE Carga_Viagem SET QUANTIDADE_ATUAL_VEICULO = QUANTIDADE_ATUAL_VEICULO - 10 WHERE ID_VIAGEM = v_viagem_id_b AND ID_PRODUTO = 9901;

    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA, DISTANCIA_PERCORRIDA_KM)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id_b, 63, 2, TO_TIMESTAMP('2025-03-11 10:40:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-11 11:10:00', 'YYYY-MM-DD HH24:MI:SS'), 'Abastecimento', 8.1)
    RETURNING ID_PARAGEM INTO v_paragem_id_b2;

    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
    VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_b2, 9920, 6301, 4, 12, 16);
    UPDATE Carga_Viagem SET QUANTIDADE_ATUAL_VEICULO = QUANTIDADE_ATUAL_VEICULO - 4 WHERE ID_VIAGEM = v_viagem_id_b AND ID_PRODUTO = 9920;

    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
    VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_b2, 9924, 6302, 5, 0, 5);
    UPDATE Carga_Viagem SET QUANTIDADE_ATUAL_VEICULO = QUANTIDADE_ATUAL_VEICULO - 5 WHERE ID_VIAGEM = v_viagem_id_b AND ID_PRODUTO = 9924;

    DBMS_OUTPUT.PUT_LINE('VIEW B: Usar ID_VIAGEM = ' || v_viagem_id_b || ' para teste.');
END;
/

-- Dados para VIEW C [79, 179] (Mais Vendido Mês Anterior - Março 2025)
DECLARE
    v_venda_id NUMBER;
BEGIN
    FOR i IN 1..44 LOOP
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
        VALUES (seq_venda_aabd.NEXTVAL, 63, 9924, 6302, TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i-1) * (10/44) , 'DAY'), 1, 1.45, 1.45, CASE WHEN MOD(i,2)=0 THEN 'MBWay' ELSE 'Multibanco' END, 'Concluida')
        RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
    FOR i IN 1..23 LOOP
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
        VALUES (seq_venda_aabd.NEXTVAL, 63, 9924, 6302, TO_TIMESTAMP('2025-03-12 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i-1) * (20/23) , 'DAY'), 1, 1.45, 1.45, CASE WHEN MOD(i,2)=0 THEN 'MBWay' ELSE 'Multibanco' END, 'Concluida')
        RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
    FOR i IN 1..30 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
         VALUES (seq_venda_aabd.NEXTVAL, 63, 9920, 6301, TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i, 'DAY'), 1, 1.50, 1.50, 'MBWay', 'Concluida')
         RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
END;
/

-- Dados para VIEW D [84, 183] (Máquinas perto Taveiro com KitKat)
DECLARE
    v_viagem_id_d NUMBER;
    v_paragem_id_d NUMBER;
BEGIN
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, ID_ARMAZEM_FIM, DATA_HORA_INICIO, DATA_HORA_FIM, DISTANCIA_TOTAL_KM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 1, 1, TO_TIMESTAMP('2025-02-21 08:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-02-21 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 15.0, 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id_d;

    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA, DISTANCIA_PERCORRIDA_KM)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id_d, 787, 1, TO_TIMESTAMP('2025-02-21 09:07:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-02-21 09:40:00', 'YYYY-MM-DD HH24:MI:SS'), 'Abastecimento', 7.5)
    RETURNING ID_PARAGEM INTO v_paragem_id_d;

    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
        VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_d, 9930, 7871, 8, 2, 10);
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
        VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_d, 9901, 7872, 10, 15, 25);
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
        VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_d, 8871, 7873, 11, 10, 21);
END;
/

-- Dados para VIEW E [87, 186] (Média Vendas 2023/24)
DECLARE
    v_venda_id NUMBER;
    v_viagem_id NUMBER;
    v_paragem_id NUMBER;
    v_num_abast NUMBER := 0;
BEGIN
    DBMS_OUTPUT.PUT_LINE('A gerar dados (amostra) para VIEW E - pode demorar...');
    FOR y IN 2023..2024 LOOP
        FOR i IN 1..100 LOOP
            INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 773, 8870, 7731, TO_TIMESTAMP(y || '-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( DBMS_RANDOM.VALUE(0, 364) , 'DAY'), 1, 0.70, 0.70, 'MBWay', 'Concluida')
            RETURNING ID_VENDA INTO v_venda_id;
        END LOOP;
    END LOOP;

    FOR y IN 2023..2024 LOOP
        FOR i IN 1..25 LOOP
             INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
             VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 1, TO_TIMESTAMP(y || '-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/25)*364 , 'DAY'), TO_TIMESTAMP(y || '-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/25)*364 + 0.2 , 'DAY'), 'Concluída')
             RETURNING ID_VIAGEM INTO v_viagem_id;
             INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA)
             VALUES (seq_paragem.NEXTVAL, v_viagem_id, 773, 1, TO_TIMESTAMP(y || '-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/25)*364 + 0.1 , 'DAY'), TO_TIMESTAMP(y || '-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/25)*364 + 0.15 , 'DAY'))
             RETURNING ID_PARAGEM INTO v_paragem_id;
             INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA)
             VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 7731, 30 + MOD(i,10));
             v_num_abast := v_num_abast + 1;
        END LOOP;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('VIEW E: Inseridas ' || v_num_abast || ' abastecimentos amostra para Maquina 773.');
END;
/

-- Dados para VIEW F [89, 191] (Máquina que vendeu mais AGUA 72h, Detalhes Fev 2025)
DECLARE
    v_viagem_id_f NUMBER;
    v_paragem_id_f NUMBER;
    v_venda_id NUMBER;
    v_total_fev NUMBER := 1425;
    v_agua_fev NUMBER := 456;
    v_outros_fev NUMBER := v_total_fev - v_agua_fev;
BEGIN
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 102, 'AA-11-BB', 1, TO_TIMESTAMP('2025-02-10 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-02-10 11:15:00', 'YYYY-MM-DD HH24:MI:SS'), 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id_f;
    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id_f, 884, 1, TO_TIMESTAMP('2025-02-10 10:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-02-10 11:00:00', 'YYYY-MM-DD HH24:MI:SS'))
    RETURNING ID_PARAGEM INTO v_paragem_id_f;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
    VALUES (seq_abastecimento.NEXTVAL, v_paragem_id_f, 8878, 8841, 490, 5, 495);

    FOR i IN 1..456 LOOP -- Reduzir loops para teste rápido se necessário
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 884, 8878, 8841, TO_TIMESTAMP('2025-02-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/456)*27 , 'DAY'), 1, 0.90, 0.90, 'MBWay', 'Concluida')
            RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
    FOR i IN 1..969 LOOP
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 884, 9901, 8843, TO_TIMESTAMP('2025-02-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/969)*27 , 'DAY'), 1, 1.25, 1.25, 'Multibanco', 'Concluida')
            RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;

    FOR i IN 1..15 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 884, CASE WHEN MOD(i,2)=0 THEN 8878 ELSE 8871 END,
                                              CASE WHEN MOD(i,2)=0 THEN 8841 ELSE 8842 END,
                                              SYSTIMESTAMP - NUMTODSINTERVAL( DBMS_RANDOM.VALUE(1, 71) , 'HOUR'), 1, 0.90, 0.90, 'MBWay', 'Concluida')
            RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
     FOR i IN 1..5 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, TIPO_PAGAMENTO, ESTADO_VENDA)
            VALUES (seq_venda_aabd.NEXTVAL, 773, 8870, 7731, SYSTIMESTAMP - NUMTODSINTERVAL( DBMS_RANDOM.VALUE(1, 71) , 'HOUR'), 1, 0.70, 0.70, 'Multibanco', 'Concluida')
            RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
END;
/

-- Dados para VIEW G [93, 194] (Tipos mais abastecidos 2024, Coimbra, Viagens > 3 maq)
DECLARE
    v_viagem_id NUMBER;
    v_paragem_id NUMBER;
    v_abast_id NUMBER;
    v_num_viagens_g NUMBER := 20;
BEGIN
    DBMS_OUTPUT.PUT_LINE('A gerar dados (amostra) para VIEW G...');
    FOR i IN 1..v_num_viagens_g LOOP
        INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
        VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', CASE WHEN MOD(i,2)=0 THEN 1 ELSE 2 END,
            TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 , 'DAY'),
            TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.3 + DBMS_RANDOM.VALUE(0,0.2) , 'DAY'), 'Concluída')
        RETURNING ID_VIAGEM INTO v_viagem_id;

        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1, 1, TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.1 , 'DAY'), TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.12 , 'DAY')) RETURNING ID_PARAGEM INTO v_paragem_id;
            INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8871, 105, 10 + MOD(i, 5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
            IF MOD(i, 3) = 0 THEN
               INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9901+MOD(i,4), 101+MOD(i,4), 5 + MOD(i,3)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
            END IF;

        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 63, 2, TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.15 , 'DAY'), TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.17 , 'DAY')) RETURNING ID_PARAGEM INTO v_paragem_id;
             IF MOD(i,2) = 0 THEN -- Abastecer Coca-Cola (7701) no Comp 6303
                 INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 7701, 6303, 15)
                 RETURNING ID_ABASTECIMENTO INTO v_abast_id;
             END IF;
             IF MOD(i, 2) = 1 THEN -- Abastecer Chocolate (MARS 9920) no Comp 6301
                INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9920, 6301, 8 + MOD(i, 4)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
             END IF;

        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 884, 3, TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.20 , 'DAY'), TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.22 , 'DAY')) RETURNING ID_PARAGEM INTO v_paragem_id;
            INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8878, 8841, 20 + MOD(i, 10)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;

        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1001, 4, TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.25 , 'DAY'), TO_TIMESTAMP('2024-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL( (i/v_num_viagens_g)*365 + 0.27 , 'DAY')) RETURNING ID_PARAGEM INTO v_paragem_id;
            INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 10011, 12 + MOD(i, 6)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
             IF MOD(i, 4) = 0 THEN
                INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 7701, 10012, 10 + MOD(i, 5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
             END IF;
    END LOOP;
END;
/

-- Dados para VIEW H [97, 198] (Veículos mais usados Março 2025...)
DECLARE
    v_viagem_id NUMBER;
    v_paragem_id NUMBER;
    v_abast_id NUMBER;
    v_num_viagens_h NUMBER := 6;
BEGIN
     DBMS_OUTPUT.PUT_LINE('A gerar dados (amostra) para VIEW H...');
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, DISTANCIA_TOTAL_KM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 101, 'DD-66-77', 1, TO_TIMESTAMP('2025-03-20 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-20 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), 75.2, 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 787, 1, TO_TIMESTAMP('2025-03-20 09:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-20 09:30:00', 'YYYY-MM-DD HH24:MI:SS')) RETURNING ID_PARAGEM INTO v_paragem_id;
            INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8871, 7873, 10) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1003, 2, TO_TIMESTAMP('2025-03-20 09:50:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-20 10:20:00', 'YYYY-MM-DD HH24:MI:SS')) RETURNING ID_PARAGEM INTO v_paragem_id;
            INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 10031, 15) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1001, 3, TO_TIMESTAMP('2025-03-20 10:55:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-20 11:25:00', 'YYYY-MM-DD HH24:MI:SS')) RETURNING ID_PARAGEM INTO v_paragem_id;
            INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 10011, 12) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1002, 4, TO_TIMESTAMP('2025-03-20 12:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-20 12:30:00', 'YYYY-MM-DD HH24:MI:SS')) RETURNING ID_PARAGEM INTO v_paragem_id;
             INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8871, 10021, 14) RETURNING ID_ABASTECIMENTO INTO v_abast_id;

    FOR i IN 1..v_num_viagens_h LOOP
        INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, DISTANCIA_TOTAL_KM, ESTADO_VIAGEM)
        VALUES (seq_viagem.NEXTVAL,
                CASE WHEN MOD(i,2)=0 THEN 101 ELSE 102 END,
                CASE WHEN i <= 2 THEN 'DD-66-77' WHEN i <= 4 THEN 'AA-11-BB' ELSE 'CC-22-DD' END,
                CASE WHEN MOD(i,3)=0 THEN 2 ELSE 1 END,
                TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'),
                TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3 + 0.4, 'DAY'),
                40 + i*10,
                'Concluída')
        RETURNING ID_VIAGEM INTO v_viagem_id;
        IF MOD(i,2) = 0 AND (40 + i*10) > 50 THEN
             INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1, 1, TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3 + 0.1, 'DAY'), TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3 + 0.12, 'DAY')) RETURNING ID_PARAGEM INTO v_paragem_id;
                INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8871, 105, 5) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
             INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 884, 2, TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3 + 0.15, 'DAY'), TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3 + 0.17, 'DAY')) RETURNING ID_PARAGEM INTO v_paragem_id;
                 INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8878, 8841, 8) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
             INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1001, 3, TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3 + 0.2, 'DAY'), TO_TIMESTAMP('2025-03-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3 + 0.22, 'DAY')) RETURNING ID_PARAGEM INTO v_paragem_id;
                 INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 10011, 6) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        END IF;
    END LOOP;
END;
/

-- Dados para VIEW I [100, 201] (Top 3 Máquinas Visitadas...)
DECLARE
    v_viagem_id NUMBER;
    v_paragem_id NUMBER;
    v_abast_id NUMBER;
    v_num_visitas_i NUMBER := 22;
    v_num_viagens_outras NUMBER := 5;
BEGIN
     DBMS_OUTPUT.PUT_LINE('A gerar dados (amostra) para VIEW I...');
    FOR i IN 1..v_num_visitas_i LOOP
        INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
        VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 1,
                TO_TIMESTAMP('2025-01-01 09:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'),
                TO_TIMESTAMP('2025-01-01 15:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'),
                'Concluída')
        RETURNING ID_VIAGEM INTO v_viagem_id;

        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA)
        VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1001, 1,
                TO_TIMESTAMP('2025-01-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'),
                TO_TIMESTAMP('2025-01-01 10:45:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'),
                'Abastecimento')
        RETURNING ID_PARAGEM INTO v_paragem_id;

        INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 10011, 65 + MOD(i,5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 7701, 10012, 60 + MOD(i,5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9955, 10013, 66 + MOD(i,5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9920, 10014, 68 + MOD(i,5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9930, 10015, 69 + MOD(i,5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;

        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA)
        VALUES (seq_paragem.NEXTVAL, v_viagem_id, 63, 2,
                TO_TIMESTAMP('2025-01-01 11:15:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'),
                TO_TIMESTAMP('2025-01-01 11:45:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'))
        RETURNING ID_PARAGEM INTO v_paragem_id;
         INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9920, 6301, 5 + MOD(i, 10)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;

        IF MOD(i,2) = 0 THEN
             INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA)
             VALUES (seq_paragem.NEXTVAL, v_viagem_id, 787, 3,
                     TO_TIMESTAMP('2025-01-01 12:15:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'),
                     TO_TIMESTAMP('2025-01-01 12:45:00', 'YYYY-MM-DD HH24:MI:SS') + NUMTODSINTERVAL(i*3, 'DAY'))
             RETURNING ID_PARAGEM INTO v_paragem_id;
             INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9930, 7871, 7 + MOD(i, 5)) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        END IF;
    END LOOP;

    FOR i IN 1..v_num_viagens_outras LOOP
        INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
        VALUES (seq_viagem.NEXTVAL, 102, 'CC-22-DD', 2, SYSTIMESTAMP - NUMTODSINTERVAL(i*5, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(i*5 - 0.3, 'DAY'), 'Concluída')
        RETURNING ID_VIAGEM INTO v_viagem_id;
    END LOOP;
END;
/

-- Dados para VIEW J [202] (Histórico de Estados)
DECLARE
    v_log_id NUMBER;
BEGIN
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 787, 1, TO_TIMESTAMP('2025-01-10 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-02-15 09:30:00', 'YYYY-MM-DD HH24:MI:SS'), 'PING_MAQUINA') RETURNING ID_LOG_ESTADO INTO v_log_id;
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 787, 3, TO_TIMESTAMP('2025-02-15 09:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-02-15 11:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'PING_MAQUINA') RETURNING ID_LOG_ESTADO INTO v_log_id;
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 787, 1, TO_TIMESTAMP('2025-02-15 11:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-05 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'PING_MAQUINA') RETURNING ID_LOG_ESTADO INTO v_log_id;
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 787, 3, TO_TIMESTAMP('2025-03-05 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-05 14:30:00', 'YYYY-MM-DD HH24:MI:SS'), 'PING_MAQUINA') RETURNING ID_LOG_ESTADO INTO v_log_id;
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 787, 1, TO_TIMESTAMP('2025-03-05 14:30:00', 'YYYY-MM-DD HH24:MI:SS'), NULL, 'PING_MAQUINA') RETURNING ID_LOG_ESTADO INTO v_log_id;

    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 999, 1, TO_DATE('2022-01-01', 'YYYY-MM-DD'), TO_TIMESTAMP('2025-03-07 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'INSTALACAO') RETURNING ID_LOG_ESTADO INTO v_log_id;
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 999, 0, TO_TIMESTAMP('2025-03-07 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), NULL, 'MANUTENCAO_MANUAL') RETURNING ID_LOG_ESTADO INTO v_log_id;

    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 1002, 1, TO_DATE('2023-06-10', 'YYYY-MM-DD'), TO_TIMESTAMP('2025-04-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'INSTALACAO') RETURNING ID_LOG_ESTADO INTO v_log_id;
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 1002, 2, TO_TIMESTAMP('2025-04-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-04-01 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'MANUTENCAO_MANUAL') RETURNING ID_LOG_ESTADO INTO v_log_id;
    INSERT INTO Log_Estado_Maquina(ID_LOG_ESTADO, ID_MAQUINA, ID_ESTADO, DATA_INICIO_ESTADO, DATA_FIM_ESTADO, ORIGEM_ALTERACAO)
    VALUES (seq_log_estado.NEXTVAL, 1002, 1, TO_TIMESTAMP('2025-04-01 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), NULL, 'MANUTENCAO_MANUAL') RETURNING ID_LOG_ESTADO INTO v_log_id;
END;
/

-- Dados para VIEW K [208] (Eficiência de Viagens)
DECLARE
    v_rota_id NUMBER;
    v_viagem_id NUMBER;
    v_paragem_id NUMBER;
    v_abast_id NUMBER;
BEGIN
    INSERT INTO Rota (ID_ROTA, NOME_ROTA, DESCRICAO, ID_ARMAZEM_ORIGEM, DISTANCIA_TOTAL_KM, ATIVO)
    VALUES (1, 'Rota Centro Coimbra', 'Máquinas na baixa e Celas', 2, 25.5, 'S')
    RETURNING ID_ROTA INTO v_rota_id;
        INSERT INTO Detalhe_Rota (ID_ROTA, ID_MAQUINA, ORDEM_VISITA) VALUES (v_rota_id, 1, 1);
        INSERT INTO Detalhe_Rota (ID_ROTA, ID_MAQUINA, ORDEM_VISITA) VALUES (v_rota_id, 63, 2);
        INSERT INTO Detalhe_Rota (ID_ROTA, ID_MAQUINA, ORDEM_VISITA) VALUES (v_rota_id, 1001, 3);

    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, ID_ARMAZEM_FIM, ID_ROTA, DATA_HORA_INICIO, DATA_HORA_FIM, DISTANCIA_TOTAL_KM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 102, 'CC-22-DD', 2, 2, v_rota_id, SYSTIMESTAMP - NUMTODSINTERVAL(2, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.8, 'DAY'), 28.0, 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1, 1, SYSTIMESTAMP - NUMTODSINTERVAL(1.95, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.91, 'DAY'), 'Abastecimento') RETURNING ID_PARAGEM INTO v_paragem_id;
             INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8871, 105, 8) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 63, 2, SYSTIMESTAMP - NUMTODSINTERVAL(1.90, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.88, 'DAY'), 'Abastecimento') RETURNING ID_PARAGEM INTO v_paragem_id;
             INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 9920, 6301, 5) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1001, 3, SYSTIMESTAMP - NUMTODSINTERVAL(1.87, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.86, 'DAY'), 'Verificacao') RETURNING ID_PARAGEM INTO v_paragem_id;

    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, ID_ARMAZEM_FIM, ID_ROTA, DATA_HORA_INICIO, DATA_HORA_FIM, DISTANCIA_TOTAL_KM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 1, 1, NULL, SYSTIMESTAMP - NUMTODSINTERVAL(3, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(2.7, 'DAY'), 45.0, 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1002, 1, SYSTIMESTAMP - NUMTODSINTERVAL(2.9, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(2.88, 'DAY'), 'Abastecimento') RETURNING ID_PARAGEM INTO v_paragem_id;
             INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8871, 10021, 10) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
        INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA, TIPO_VISITA) VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1003, 2, SYSTIMESTAMP - NUMTODSINTERVAL(2.85, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(2.83, 'DAY'), 'Abastecimento') RETURNING ID_PARAGEM INTO v_paragem_id;
             INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA) VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 10031, 12) RETURNING ID_ABASTECIMENTO INTO v_abast_id;
END;
/

-- Dados para VIEW L [216] (Faturação Últimas 3 Semanas - 17 Mar a 6 Abr)
DECLARE
    v_venda_id NUMBER;
BEGIN
     DBMS_OUTPUT.PUT_LINE('A gerar dados (amostra) para VIEW L...');
    FOR i IN 1..50 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, ESTADO_VENDA)
         VALUES (seq_venda_aabd.NEXTVAL, 884, CASE WHEN MOD(i,3)=0 THEN 8878 WHEN MOD(i,3)=1 THEN 8871 ELSE 9901 END,
                                           CASE WHEN MOD(i,3)=0 THEN 8841 WHEN MOD(i,3)=1 THEN 8842 ELSE 8843 END,
                                           SYSTIMESTAMP - NUMTODSINTERVAL( DBMS_RANDOM.VALUE(0, 20) , 'DAY'), 1, 1.00, 1.00, 'Concluida')
         RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
    FOR i IN 1..10 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, ESTADO_VENDA)
         VALUES (seq_venda_aabd.NEXTVAL, 1, 8871, 105, SYSTIMESTAMP - NUMTODSINTERVAL( DBMS_RANDOM.VALUE(0, 20) , 'DAY'), 1, 0.80, 0.80, 'Concluida')
         RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
    FOR i IN 1..25 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, PRECO_UNITARIO_REGISTADO, VALOR_TOTAL, ESTADO_VENDA)
         VALUES (seq_venda_aabd.NEXTVAL, 63, CASE WHEN MOD(i,2)=0 THEN 9920 ELSE 7701 END,
                                           CASE WHEN MOD(i,2)=0 THEN 6301 ELSE 6303 END,
                                           SYSTIMESTAMP - NUMTODSINTERVAL( DBMS_RANDOM.VALUE(0, 20) , 'DAY'), 1, 1.20, 1.20, 'Concluida')
         RETURNING ID_VENDA INTO v_venda_id;
    END LOOP;
END;
/

-- Dados para VIEW M [223] (Stock < 20% E Último Abast > 5 dias)
DECLARE
    v_viagem_id NUMBER;
    v_paragem_id NUMBER;
BEGIN
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 1, TO_TIMESTAMP('2025-04-01 09:00:00','YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-04-01 10:00:00','YYYY-MM-DD HH24:MI:SS'), 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id;
    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id, 773, 1, TO_TIMESTAMP('2025-04-01 09:30:00','YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-04-01 09:50:00','YYYY-MM-DD HH24:MI:SS'))
    RETURNING ID_PARAGEM INTO v_paragem_id;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
    VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 7731, 30, 2, 32);

    UPDATE Configuracao_Compartimento SET STOCK_ATUAL = 5 WHERE ID_COMPARTIMENTO = 10021;
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 1, SYSTIMESTAMP - NUMTODSINTERVAL(2, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.9, 'DAY'), 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id;
    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1002, 1, SYSTIMESTAMP - NUMTODSINTERVAL(1.95, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.92, 'DAY'))
    RETURNING ID_PARAGEM INTO v_paragem_id;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA, STOCK_ANTES_ABAST, STOCK_DEPOIS_ABAST)
    VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8871, 10021, 15, 1, 16);
END;
/

-- Dados para VIEW N [232] (Vendas por Tipo Produto e Faixa Horária)
DECLARE
    v_venda_id NUMBER;
BEGIN
     DBMS_OUTPUT.PUT_LINE('A gerar dados (amostra) para VIEW N...');
     FOR i IN 1..30 LOOP
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, VALOR_TOTAL, ESTADO_VENDA)
        VALUES (seq_venda_aabd.NEXTVAL, 1005, 6601, 10051, (TRUNC(SYSTIMESTAMP - INTERVAL '15' DAY) + NUMTODSINTERVAL(18, 'HOUR')) + NUMTODSINTERVAL(DBMS_RANDOM.VALUE(0, 120), 'MINUTE') + NUMTODSINTERVAL(MOD(i,15), 'DAY'), 1, 1.80, 'Concluida');
        INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, VALOR_TOTAL, ESTADO_VENDA)
        VALUES (seq_venda_aabd.NEXTVAL, 1005, 8870, 10052, (TRUNC(SYSTIMESTAMP - INTERVAL '15' DAY) + NUMTODSINTERVAL(19, 'HOUR')) + NUMTODSINTERVAL(DBMS_RANDOM.VALUE(0, 60), 'MINUTE') + NUMTODSINTERVAL(MOD(i,15), 'DAY'), 1, 0.75, 'Concluida');
     END LOOP;
     FOR i IN 1..20 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, VALOR_TOTAL, ESTADO_VENDA)
        VALUES (seq_venda_aabd.NEXTVAL, 1005, 9901, 10053, (TRUNC(SYSTIMESTAMP - INTERVAL '15' DAY) + NUMTODSINTERVAL(11, 'HOUR')) + NUMTODSINTERVAL(DBMS_RANDOM.VALUE(0, 360), 'MINUTE') + NUMTODSINTERVAL(MOD(i,15), 'DAY'), 1, 1.20, 'Concluida');
     END LOOP;
     FOR i IN 1..40 LOOP
         INSERT INTO Venda (ID_VENDA, ID_MAQUINA, ID_PRODUTO, ID_COMPARTIMENTO, DATA_VENDA, QUANTIDADE, VALOR_TOTAL, ESTADO_VENDA)
        VALUES (seq_venda_aabd.NEXTVAL, 1, 8871, 105, (TRUNC(SYSTIMESTAMP - INTERVAL '15' DAY) + NUMTODSINTERVAL(8, 'HOUR')) + NUMTODSINTERVAL(DBMS_RANDOM.VALUE(0, 720), 'MINUTE') + NUMTODSINTERVAL(MOD(i,15), 'DAY'), 1, 0.80, 'Concluida');
     END LOOP;
END;
/

-- Dados para VIEW O [238] (Configurações Ativas Não Reabastecidas no Último Mês)
DECLARE
    v_viagem_id NUMBER;
    v_paragem_id NUMBER;
BEGIN
    -- Maquina 1001, Comp 10013, Prod 9955 (Bolacha Maria) - NÃO abastecer recentemente. OK pela VIEW I.

    -- Abastecer Agua Luso (8870) em Maquina 1001, Comp 10011 recentemente.
    INSERT INTO Viagem (ID_VIAGEM, ID_FUNCIONARIO, MATRICULA_VEICULO, ID_ARMAZEM_ORIGEM, DATA_HORA_INICIO, DATA_HORA_FIM, ESTADO_VIAGEM)
    VALUES (seq_viagem.NEXTVAL, 101, 'AA-11-BB', 1, SYSTIMESTAMP - NUMTODSINTERVAL(10, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(9.8, 'DAY'), 'Concluída')
    RETURNING ID_VIAGEM INTO v_viagem_id;
    INSERT INTO Paragem (ID_PARAGEM, ID_VIAGEM, ID_MAQUINA, ORDEM_VISITA, DATA_HORA_CHEGADA, DATA_HORA_SAIDA)
    VALUES (seq_paragem.NEXTVAL, v_viagem_id, 1001, 1, SYSTIMESTAMP - NUMTODSINTERVAL(9.9, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(9.85, 'DAY'))
    RETURNING ID_PARAGEM INTO v_paragem_id;
    INSERT INTO Abastecimento_Detalhe (ID_ABASTECIMENTO, ID_PARAGEM, ID_PRODUTO, ID_COMPARTIMENTO, QUANTIDADE_ABASTECIDA)
    VALUES (seq_abastecimento.NEXTVAL, v_paragem_id, 8870, 10011, 10);

    -- Inativar uma configuração
    UPDATE Configuracao_Compartimento SET DATA_FIM_CONFIGURACAO = SYSDATE - INTERVAL '2' MONTH
    WHERE ID_COMPARTIMENTO = 105 AND ID_PRODUTO = 8871;
END;
/


-- Dados para Nova Tabela Manutencao (VIEW J implícito, Q39, Q40)
DECLARE
    v_manut_id NUMBER;
    v_paragem_id_manut NUMBER := NULL;
BEGIN
     DBMS_OUTPUT.PUT_LINE('A gerar dados (amostra) para Manutencao...');
     -- Manutenção Corretiva M787
     INSERT INTO Manutencao (ID_MANUTENCAO, ID_MAQUINA, ID_FUNCIONARIO, DATA_HORA_INICIO, DATA_HORA_FIM, TIPO_MANUTENCAO, DESCRICAO_SERVICO, PECAS_USADAS, ESTADO_MAQUINA_ANTES, ESTADO_MAQUINA_DEPOIS)
     VALUES(seq_manutencao.NEXTVAL, 787, 104, TO_TIMESTAMP('2025-03-05 15:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-03-05 16:30:00', 'YYYY-MM-DD HH24:MI:SS'), 'Corretiva', 'Reparação de sensor de moeda encravado.', 'Sensor XPT0-Rev2', 3, 1)
     RETURNING ID_MANUTENCAO INTO v_manut_id;

     -- Manutenção Preventiva M1002 durante viagem
     BEGIN -- Bloco interno para tratar NO_DATA_FOUND opcionalmente
       -- >> CORREÇÃO AQUI: CAST para TIMESTAMP <<
       SELECT MAX(ID_PARAGEM) INTO v_paragem_id_manut
       FROM Paragem
       WHERE ID_MAQUINA=1002 AND DATA_HORA_CHEGADA > CAST((SYSDATE - INTERVAL '5' DAY) AS TIMESTAMP);
     EXCEPTION
        WHEN NO_DATA_FOUND THEN
           v_paragem_id_manut := NULL; -- Garante que é NULL se não encontrar paragem
     END; -- Fim do bloco interno

     -- Só insere se encontrou uma paragem (v_paragem_id_manut não é NULL) ou ajusta conforme necessário
     IF v_paragem_id_manut IS NOT NULL THEN
         INSERT INTO Manutencao (ID_MANUTENCAO, ID_MAQUINA, ID_FUNCIONARIO, ID_PARAGEM, DATA_HORA_INICIO, DATA_HORA_FIM, TIPO_MANUTENCAO, DESCRICAO_SERVICO)
         VALUES(seq_manutencao.NEXTVAL, 1002, 101, v_paragem_id_manut, SYSTIMESTAMP - NUMTODSINTERVAL(1.94, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.92, 'DAY'), 'Preventiva', 'Limpeza geral e verificação de níveis.')
         RETURNING ID_MANUTENCAO INTO v_manut_id;
     ELSE
         -- Opcional: Inserir a manutenção mesmo sem ID_PARAGEM associado
         INSERT INTO Manutencao (ID_MANUTENCAO, ID_MAQUINA, ID_FUNCIONARIO, ID_PARAGEM, DATA_HORA_INICIO, DATA_HORA_FIM, TIPO_MANUTENCAO, DESCRICAO_SERVICO)
         VALUES(seq_manutencao.NEXTVAL, 1002, 101, NULL, SYSTIMESTAMP - NUMTODSINTERVAL(1.94, 'DAY'), SYSTIMESTAMP - NUMTODSINTERVAL(1.92, 'DAY'), 'Preventiva', 'Limpeza geral e verificação de níveis (sem Paragem ID).')
         RETURNING ID_MANUTENCAO INTO v_manut_id;
         DBMS_OUTPUT.PUT_LINE('Aviso: Não foi encontrada Paragem recente para M1002. Manutenção inserida sem ID_PARAGEM.');
     END IF;

END;
/

-- ==================================================
-- Commit Final dos Dados
-- ==================================================
COMMIT;
